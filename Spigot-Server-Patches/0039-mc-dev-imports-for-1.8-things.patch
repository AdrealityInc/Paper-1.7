From 2f0886ffb64bbfdcc07654623d6706aed64add98 Mon Sep 17 00:00:00 2001
From: Zach Brown <Zbob750@live.com>
Date: Sat, 6 Sep 2014 22:05:09 -0500
Subject: [PATCH] mc-dev imports for 1.8 things


diff --git a/src/main/java/net/minecraft/server/BlockStone.java b/src/main/java/net/minecraft/server/BlockStone.java
new file mode 100644
index 0000000..33be3e3
--- /dev/null
+++ b/src/main/java/net/minecraft/server/BlockStone.java
@@ -0,0 +1,15 @@
+package net.minecraft.server;
+
+import java.util.Random;
+
+public class BlockStone extends Block {
+
+    public BlockStone() {
+        super(Material.STONE);
+        this.a(CreativeModeTab.b);
+    }
+
+    public Item getDropType(int i, Random random, int j) {
+        return Item.getItemOf(Blocks.COBBLESTONE);
+    }
+}
diff --git a/src/main/java/net/minecraft/server/Blocks.java b/src/main/java/net/minecraft/server/Blocks.java
new file mode 100644
index 0000000..c36e7fb
--- /dev/null
+++ b/src/main/java/net/minecraft/server/Blocks.java
@@ -0,0 +1,177 @@
+package net.minecraft.server;
+
+public class Blocks {
+
+    public static final Block AIR = (Block) Block.REGISTRY.get("air");
+    public static final Block STONE = (Block) Block.REGISTRY.get("stone");
+    public static final BlockGrass GRASS = (BlockGrass) Block.REGISTRY.get("grass");
+    public static final Block DIRT = (Block) Block.REGISTRY.get("dirt");
+    public static final Block COBBLESTONE = (Block) Block.REGISTRY.get("cobblestone");
+    public static final Block WOOD = (Block) Block.REGISTRY.get("planks");
+    public static final Block SAPLING = (Block) Block.REGISTRY.get("sapling");
+    public static final Block BEDROCK = (Block) Block.REGISTRY.get("bedrock");
+    public static final BlockFluids WATER = (BlockFluids) Block.REGISTRY.get("flowing_water");
+    public static final Block STATIONARY_WATER = (Block) Block.REGISTRY.get("water");
+    public static final BlockFluids LAVA = (BlockFluids) Block.REGISTRY.get("flowing_lava");
+    public static final Block STATIONARY_LAVA = (Block) Block.REGISTRY.get("lava");
+    public static final BlockSand SAND = (BlockSand) Block.REGISTRY.get("sand");
+    public static final Block GRAVEL = (Block) Block.REGISTRY.get("gravel");
+    public static final Block GOLD_ORE = (Block) Block.REGISTRY.get("gold_ore");
+    public static final Block IRON_ORE = (Block) Block.REGISTRY.get("iron_ore");
+    public static final Block COAL_ORE = (Block) Block.REGISTRY.get("coal_ore");
+    public static final Block LOG = (Block) Block.REGISTRY.get("log");
+    public static final Block LOG2 = (Block) Block.REGISTRY.get("log2");
+    public static final BlockLeaves LEAVES = (BlockLeaves) Block.REGISTRY.get("leaves");
+    public static final BlockLeaves LEAVES2 = (BlockLeaves) Block.REGISTRY.get("leaves2");
+    public static final Block SPONGE = (Block) Block.REGISTRY.get("sponge");
+    public static final Block GLASS = (Block) Block.REGISTRY.get("glass");
+    public static final Block LAPIS_ORE = (Block) Block.REGISTRY.get("lapis_ore");
+    public static final Block LAPIS_BLOCK = (Block) Block.REGISTRY.get("lapis_block");
+    public static final Block DISPENSER = (Block) Block.REGISTRY.get("dispenser");
+    public static final Block SANDSTONE = (Block) Block.REGISTRY.get("sandstone");
+    public static final Block NOTE_BLOCK = (Block) Block.REGISTRY.get("noteblock");
+    public static final Block BED = (Block) Block.REGISTRY.get("bed");
+    public static final Block GOLDEN_RAIL = (Block) Block.REGISTRY.get("golden_rail");
+    public static final Block DETECTOR_RAIL = (Block) Block.REGISTRY.get("detector_rail");
+    public static final BlockPiston PISTON_STICKY = (BlockPiston) Block.REGISTRY.get("sticky_piston");
+    public static final Block WEB = (Block) Block.REGISTRY.get("web");
+    public static final BlockLongGrass LONG_GRASS = (BlockLongGrass) Block.REGISTRY.get("tallgrass");
+    public static final BlockDeadBush DEAD_BUSH = (BlockDeadBush) Block.REGISTRY.get("deadbush");
+    public static final BlockPiston PISTON = (BlockPiston) Block.REGISTRY.get("piston");
+    public static final BlockPistonExtension PISTON_EXTENSION = (BlockPistonExtension) Block.REGISTRY.get("piston_head");
+    public static final Block WOOL = (Block) Block.REGISTRY.get("wool");
+    public static final BlockPistonMoving PISTON_MOVING = (BlockPistonMoving) Block.REGISTRY.get("piston_extension");
+    public static final BlockFlowers YELLOW_FLOWER = (BlockFlowers) Block.REGISTRY.get("yellow_flower");
+    public static final BlockFlowers RED_ROSE = (BlockFlowers) Block.REGISTRY.get("red_flower");
+    public static final BlockPlant BROWN_MUSHROOM = (BlockPlant) Block.REGISTRY.get("brown_mushroom");
+    public static final BlockPlant RED_MUSHROOM = (BlockPlant) Block.REGISTRY.get("red_mushroom");
+    public static final Block GOLD_BLOCK = (Block) Block.REGISTRY.get("gold_block");
+    public static final Block IRON_BLOCK = (Block) Block.REGISTRY.get("iron_block");
+    public static final BlockStepAbstract DOUBLE_STEP = (BlockStepAbstract) Block.REGISTRY.get("double_stone_slab");
+    public static final BlockStepAbstract STEP = (BlockStepAbstract) Block.REGISTRY.get("stone_slab");
+    public static final Block BRICK = (Block) Block.REGISTRY.get("brick_block");
+    public static final Block TNT = (Block) Block.REGISTRY.get("tnt");
+    public static final Block BOOKSHELF = (Block) Block.REGISTRY.get("bookshelf");
+    public static final Block MOSSY_COBBLESTONE = (Block) Block.REGISTRY.get("mossy_cobblestone");
+    public static final Block OBSIDIAN = (Block) Block.REGISTRY.get("obsidian");
+    public static final Block TORCH = (Block) Block.REGISTRY.get("torch");
+    public static final BlockFire FIRE = (BlockFire) Block.REGISTRY.get("fire");
+    public static final Block MOB_SPAWNER = (Block) Block.REGISTRY.get("mob_spawner");
+    public static final Block WOOD_STAIRS = (Block) Block.REGISTRY.get("oak_stairs");
+    public static final BlockChest CHEST = (BlockChest) Block.REGISTRY.get("chest");
+    public static final BlockRedstoneWire REDSTONE_WIRE = (BlockRedstoneWire) Block.REGISTRY.get("redstone_wire");
+    public static final Block DIAMOND_ORE = (Block) Block.REGISTRY.get("diamond_ore");
+    public static final Block DIAMOND_BLOCK = (Block) Block.REGISTRY.get("diamond_block");
+    public static final Block WORKBENCH = (Block) Block.REGISTRY.get("crafting_table");
+    public static final Block CROPS = (Block) Block.REGISTRY.get("wheat");
+    public static final Block SOIL = (Block) Block.REGISTRY.get("farmland");
+    public static final Block FURNACE = (Block) Block.REGISTRY.get("furnace");
+    public static final Block BURNING_FURNACE = (Block) Block.REGISTRY.get("lit_furnace");
+    public static final Block SIGN_POST = (Block) Block.REGISTRY.get("standing_sign");
+    public static final Block WOODEN_DOOR = (Block) Block.REGISTRY.get("wooden_door");
+    public static final Block LADDER = (Block) Block.REGISTRY.get("ladder");
+    public static final Block RAILS = (Block) Block.REGISTRY.get("rail");
+    public static final Block COBBLESTONE_STAIRS = (Block) Block.REGISTRY.get("stone_stairs");
+    public static final Block WALL_SIGN = (Block) Block.REGISTRY.get("wall_sign");
+    public static final Block LEVER = (Block) Block.REGISTRY.get("lever");
+    public static final Block STONE_PLATE = (Block) Block.REGISTRY.get("stone_pressure_plate");
+    public static final Block IRON_DOOR_BLOCK = (Block) Block.REGISTRY.get("iron_door");
+    public static final Block WOOD_PLATE = (Block) Block.REGISTRY.get("wooden_pressure_plate");
+    public static final Block REDSTONE_ORE = (Block) Block.REGISTRY.get("redstone_ore");
+    public static final Block GLOWING_REDSTONE_ORE = (Block) Block.REGISTRY.get("lit_redstone_ore");
+    public static final Block REDSTONE_TORCH_OFF = (Block) Block.REGISTRY.get("unlit_redstone_torch");
+    public static final Block REDSTONE_TORCH_ON = (Block) Block.REGISTRY.get("redstone_torch");
+    public static final Block STONE_BUTTON = (Block) Block.REGISTRY.get("stone_button");
+    public static final Block SNOW = (Block) Block.REGISTRY.get("snow_layer");
+    public static final Block ICE = (Block) Block.REGISTRY.get("ice");
+    public static final Block SNOW_BLOCK = (Block) Block.REGISTRY.get("snow");
+    public static final Block CACTUS = (Block) Block.REGISTRY.get("cactus");
+    public static final Block CLAY = (Block) Block.REGISTRY.get("clay");
+    public static final Block SUGAR_CANE_BLOCK = (Block) Block.REGISTRY.get("reeds");
+    public static final Block JUKEBOX = (Block) Block.REGISTRY.get("jukebox");
+    public static final Block FENCE = (Block) Block.REGISTRY.get("fence");
+    public static final Block PUMPKIN = (Block) Block.REGISTRY.get("pumpkin");
+    public static final Block NETHERRACK = (Block) Block.REGISTRY.get("netherrack");
+    public static final Block SOUL_SAND = (Block) Block.REGISTRY.get("soul_sand");
+    public static final Block GLOWSTONE = (Block) Block.REGISTRY.get("glowstone");
+    public static final BlockPortal PORTAL = (BlockPortal) Block.REGISTRY.get("portal");
+    public static final Block JACK_O_LANTERN = (Block) Block.REGISTRY.get("lit_pumpkin");
+    public static final Block CAKE_BLOCK = (Block) Block.REGISTRY.get("cake");
+    public static final BlockRepeater DIODE_OFF = (BlockRepeater) Block.REGISTRY.get("unpowered_repeater");
+    public static final BlockRepeater DIODE_ON = (BlockRepeater) Block.REGISTRY.get("powered_repeater");
+    public static final Block TRAP_DOOR = (Block) Block.REGISTRY.get("trapdoor");
+    public static final Block MONSTER_EGGS = (Block) Block.REGISTRY.get("monster_egg");
+    public static final Block SMOOTH_BRICK = (Block) Block.REGISTRY.get("stonebrick");
+    public static final Block BIG_MUSHROOM_1 = (Block) Block.REGISTRY.get("brown_mushroom_block");
+    public static final Block BIG_MUSHROOM_2 = (Block) Block.REGISTRY.get("red_mushroom_block");
+    public static final Block IRON_FENCE = (Block) Block.REGISTRY.get("iron_bars");
+    public static final Block THIN_GLASS = (Block) Block.REGISTRY.get("glass_pane");
+    public static final Block MELON = (Block) Block.REGISTRY.get("melon_block");
+    public static final Block PUMPKIN_STEM = (Block) Block.REGISTRY.get("pumpkin_stem");
+    public static final Block MELON_STEM = (Block) Block.REGISTRY.get("melon_stem");
+    public static final Block VINE = (Block) Block.REGISTRY.get("vine");
+    public static final Block FENCE_GATE = (Block) Block.REGISTRY.get("fence_gate");
+    public static final Block BRICK_STAIRS = (Block) Block.REGISTRY.get("brick_stairs");
+    public static final Block STONE_STAIRS = (Block) Block.REGISTRY.get("stone_brick_stairs");
+    public static final BlockMycel MYCEL = (BlockMycel) Block.REGISTRY.get("mycelium");
+    public static final Block WATER_LILY = (Block) Block.REGISTRY.get("waterlily");
+    public static final Block NETHER_BRICK = (Block) Block.REGISTRY.get("nether_brick");
+    public static final Block NETHER_FENCE = (Block) Block.REGISTRY.get("nether_brick_fence");
+    public static final Block NETHER_BRICK_STAIRS = (Block) Block.REGISTRY.get("nether_brick_stairs");
+    public static final Block NETHER_WART = (Block) Block.REGISTRY.get("nether_wart");
+    public static final Block ENCHANTMENT_TABLE = (Block) Block.REGISTRY.get("enchanting_table");
+    public static final Block BREWING_STAND = (Block) Block.REGISTRY.get("brewing_stand");
+    public static final BlockCauldron CAULDRON = (BlockCauldron) Block.REGISTRY.get("cauldron");
+    public static final Block ENDER_PORTAL = (Block) Block.REGISTRY.get("end_portal");
+    public static final Block ENDER_PORTAL_FRAME = (Block) Block.REGISTRY.get("end_portal_frame");
+    public static final Block WHITESTONE = (Block) Block.REGISTRY.get("end_stone");
+    public static final Block DRAGON_EGG = (Block) Block.REGISTRY.get("dragon_egg");
+    public static final Block REDSTONE_LAMP_OFF = (Block) Block.REGISTRY.get("redstone_lamp");
+    public static final Block REDSTONE_LAMP_ON = (Block) Block.REGISTRY.get("lit_redstone_lamp");
+    public static final BlockStepAbstract WOOD_DOUBLE_STEP = (BlockStepAbstract) Block.REGISTRY.get("double_wooden_slab");
+    public static final BlockStepAbstract WOOD_STEP = (BlockStepAbstract) Block.REGISTRY.get("wooden_slab");
+    public static final Block COCOA = (Block) Block.REGISTRY.get("cocoa");
+    public static final Block SANDSTONE_STAIRS = (Block) Block.REGISTRY.get("sandstone_stairs");
+    public static final Block EMERALD_ORE = (Block) Block.REGISTRY.get("emerald_ore");
+    public static final Block ENDER_CHEST = (Block) Block.REGISTRY.get("ender_chest");
+    public static final BlockTripwireHook TRIPWIRE_SOURCE = (BlockTripwireHook) Block.REGISTRY.get("tripwire_hook");
+    public static final Block TRIPWIRE = (Block) Block.REGISTRY.get("tripwire");
+    public static final Block EMERALD_BLOCK = (Block) Block.REGISTRY.get("emerald_block");
+    public static final Block SPRUCE_WOOD_STAIRS = (Block) Block.REGISTRY.get("spruce_stairs");
+    public static final Block BIRCH_WOOD_STAIRS = (Block) Block.REGISTRY.get("birch_stairs");
+    public static final Block JUNGLE_WOOD_STAIRS = (Block) Block.REGISTRY.get("jungle_stairs");
+    public static final Block COMMAND = (Block) Block.REGISTRY.get("command_block");
+    public static final BlockBeacon BEACON = (BlockBeacon) Block.REGISTRY.get("beacon");
+    public static final Block COBBLE_WALL = (Block) Block.REGISTRY.get("cobblestone_wall");
+    public static final Block FLOWER_POT = (Block) Block.REGISTRY.get("flower_pot");
+    public static final Block CARROTS = (Block) Block.REGISTRY.get("carrots");
+    public static final Block POTATOES = (Block) Block.REGISTRY.get("potatoes");
+    public static final Block WOOD_BUTTON = (Block) Block.REGISTRY.get("wooden_button");
+    public static final Block SKULL = (Block) Block.REGISTRY.get("skull");
+    public static final Block ANVIL = (Block) Block.REGISTRY.get("anvil");
+    public static final Block TRAPPED_CHEST = (Block) Block.REGISTRY.get("trapped_chest");
+    public static final Block GOLD_PLATE = (Block) Block.REGISTRY.get("light_weighted_pressure_plate");
+    public static final Block IRON_PLATE = (Block) Block.REGISTRY.get("heavy_weighted_pressure_plate");
+    public static final BlockRedstoneComparator REDSTONE_COMPARATOR_OFF = (BlockRedstoneComparator) Block.REGISTRY.get("unpowered_comparator");
+    public static final BlockRedstoneComparator REDSTONE_COMPARATOR_ON = (BlockRedstoneComparator) Block.REGISTRY.get("powered_comparator");
+    public static final BlockDaylightDetector DAYLIGHT_DETECTOR = (BlockDaylightDetector) Block.REGISTRY.get("daylight_detector");
+    public static final Block REDSTONE_BLOCK = (Block) Block.REGISTRY.get("redstone_block");
+    public static final Block QUARTZ_ORE = (Block) Block.REGISTRY.get("quartz_ore");
+    public static final BlockHopper HOPPER = (BlockHopper) Block.REGISTRY.get("hopper");
+    public static final Block QUARTZ_BLOCK = (Block) Block.REGISTRY.get("quartz_block");
+    public static final Block QUARTZ_STAIRS = (Block) Block.REGISTRY.get("quartz_stairs");
+    public static final Block ACTIVATOR_RAIL = (Block) Block.REGISTRY.get("activator_rail");
+    public static final Block DROPPER = (Block) Block.REGISTRY.get("dropper");
+    public static final Block STAINED_HARDENED_CLAY = (Block) Block.REGISTRY.get("stained_hardened_clay");
+    public static final Block HAY_BLOCK = (Block) Block.REGISTRY.get("hay_block");
+    public static final Block WOOL_CARPET = (Block) Block.REGISTRY.get("carpet");
+    public static final Block HARDENED_CLAY = (Block) Block.REGISTRY.get("hardened_clay");
+    public static final Block COAL_BLOCK = (Block) Block.REGISTRY.get("coal_block");
+    public static final Block PACKED_ICE = (Block) Block.REGISTRY.get("packed_ice");
+    public static final Block ACACIA_STAIRS = (Block) Block.REGISTRY.get("acacia_stairs");
+    public static final Block DARK_OAK_STAIRS = (Block) Block.REGISTRY.get("dark_oak_stairs");
+    public static final BlockTallPlant DOUBLE_PLANT = (BlockTallPlant) Block.REGISTRY.get("double_plant");
+    public static final BlockStainedGlass STAINED_GLASS = (BlockStainedGlass) Block.REGISTRY.get("stained_glass");
+    public static final BlockStainedGlassPane STAINED_GLASS_PANE = (BlockStainedGlassPane) Block.REGISTRY.get("stained_glass_pane");
+
+}
diff --git a/src/main/java/net/minecraft/server/ItemDoor.java b/src/main/java/net/minecraft/server/ItemDoor.java
new file mode 100644
index 0000000..ee8568b
--- /dev/null
+++ b/src/main/java/net/minecraft/server/ItemDoor.java
@@ -0,0 +1,79 @@
+package net.minecraft.server;
+
+public class ItemDoor extends Item {
+
+    private Material a;
+
+    public ItemDoor(Material material) {
+        this.a = material;
+        this.maxStackSize = 1;
+        this.a(CreativeModeTab.d);
+    }
+
+    public boolean interactWith(ItemStack itemstack, EntityHuman entityhuman, World world, int i, int j, int k, int l, float f, float f1, float f2) {
+        if (l != 1) {
+            return false;
+        } else {
+            ++j;
+            Block block;
+
+            if (this.a == Material.WOOD) {
+                block = Blocks.WOODEN_DOOR;
+            } else {
+                block = Blocks.IRON_DOOR_BLOCK;
+            }
+
+            if (entityhuman.a(i, j, k, l, itemstack) && entityhuman.a(i, j + 1, k, l, itemstack)) {
+                if (!block.canPlace(world, i, j, k)) {
+                    return false;
+                } else {
+                    int i1 = MathHelper.floor((double) ((entityhuman.yaw + 180.0F) * 4.0F / 360.0F) - 0.5D) & 3;
+
+                    place(world, i, j, k, i1, block);
+                    --itemstack.count;
+                    return true;
+                }
+            } else {
+                return false;
+            }
+        }
+    }
+
+    public static void place(World world, int i, int j, int k, int l, Block block) {
+        byte b0 = 0;
+        byte b1 = 0;
+
+        if (l == 0) {
+            b1 = 1;
+        }
+
+        if (l == 1) {
+            b0 = -1;
+        }
+
+        if (l == 2) {
+            b1 = -1;
+        }
+
+        if (l == 3) {
+            b0 = 1;
+        }
+
+        int i1 = (world.getType(i - b0, j, k - b1).r() ? 1 : 0) + (world.getType(i - b0, j + 1, k - b1).r() ? 1 : 0);
+        int j1 = (world.getType(i + b0, j, k + b1).r() ? 1 : 0) + (world.getType(i + b0, j + 1, k + b1).r() ? 1 : 0);
+        boolean flag = world.getType(i - b0, j, k - b1) == block || world.getType(i - b0, j + 1, k - b1) == block;
+        boolean flag1 = world.getType(i + b0, j, k + b1) == block || world.getType(i + b0, j + 1, k + b1) == block;
+        boolean flag2 = false;
+
+        if (flag && !flag1) {
+            flag2 = true;
+        } else if (j1 > i1) {
+            flag2 = true;
+        }
+
+        world.setTypeAndData(i, j, k, block, l, 2);
+        world.setTypeAndData(i, j + 1, k, block, 8 | (flag2 ? 1 : 0), 2);
+        world.applyPhysics(i, j, k, block);
+        world.applyPhysics(i, j + 1, k, block);
+    }
+}
diff --git a/src/main/java/net/minecraft/server/Items.java b/src/main/java/net/minecraft/server/Items.java
new file mode 100644
index 0000000..6834e67
--- /dev/null
+++ b/src/main/java/net/minecraft/server/Items.java
@@ -0,0 +1,177 @@
+package net.minecraft.server;
+
+public class Items {
+
+    public static final Item IRON_SPADE = (Item) Item.REGISTRY.get("iron_shovel");
+    public static final Item IRON_PICKAXE = (Item) Item.REGISTRY.get("iron_pickaxe");
+    public static final Item IRON_AXE = (Item) Item.REGISTRY.get("iron_axe");
+    public static final Item FLINT_AND_STEEL = (Item) Item.REGISTRY.get("flint_and_steel");
+    public static final Item APPLE = (Item) Item.REGISTRY.get("apple");
+    public static final ItemBow BOW = (ItemBow) Item.REGISTRY.get("bow");
+    public static final Item ARROW = (Item) Item.REGISTRY.get("arrow");
+    public static final Item COAL = (Item) Item.REGISTRY.get("coal");
+    public static final Item DIAMOND = (Item) Item.REGISTRY.get("diamond");
+    public static final Item IRON_INGOT = (Item) Item.REGISTRY.get("iron_ingot");
+    public static final Item GOLD_INGOT = (Item) Item.REGISTRY.get("gold_ingot");
+    public static final Item IRON_SWORD = (Item) Item.REGISTRY.get("iron_sword");
+    public static final Item WOOD_SWORD = (Item) Item.REGISTRY.get("wooden_sword");
+    public static final Item WOOD_SPADE = (Item) Item.REGISTRY.get("wooden_shovel");
+    public static final Item WOOD_PICKAXE = (Item) Item.REGISTRY.get("wooden_pickaxe");
+    public static final Item WOOD_AXE = (Item) Item.REGISTRY.get("wooden_axe");
+    public static final Item STONE_SWORD = (Item) Item.REGISTRY.get("stone_sword");
+    public static final Item STONE_SPADE = (Item) Item.REGISTRY.get("stone_shovel");
+    public static final Item STONE_PICKAXE = (Item) Item.REGISTRY.get("stone_pickaxe");
+    public static final Item STONE_AXE = (Item) Item.REGISTRY.get("stone_axe");
+    public static final Item DIAMOND_SWORD = (Item) Item.REGISTRY.get("diamond_sword");
+    public static final Item DIAMOND_SPADE = (Item) Item.REGISTRY.get("diamond_shovel");
+    public static final Item DIAMOND_PICKAXE = (Item) Item.REGISTRY.get("diamond_pickaxe");
+    public static final Item DIAMOND_AXE = (Item) Item.REGISTRY.get("diamond_axe");
+    public static final Item STICK = (Item) Item.REGISTRY.get("stick");
+    public static final Item BOWL = (Item) Item.REGISTRY.get("bowl");
+    public static final Item MUSHROOM_SOUP = (Item) Item.REGISTRY.get("mushroom_stew");
+    public static final Item GOLD_SWORD = (Item) Item.REGISTRY.get("golden_sword");
+    public static final Item GOLD_SPADE = (Item) Item.REGISTRY.get("golden_shovel");
+    public static final Item GOLD_PICKAXE = (Item) Item.REGISTRY.get("golden_pickaxe");
+    public static final Item GOLD_AXE = (Item) Item.REGISTRY.get("golden_axe");
+    public static final Item STRING = (Item) Item.REGISTRY.get("string");
+    public static final Item FEATHER = (Item) Item.REGISTRY.get("feather");
+    public static final Item SULPHUR = (Item) Item.REGISTRY.get("gunpowder");
+    public static final Item WOOD_HOE = (Item) Item.REGISTRY.get("wooden_hoe");
+    public static final Item STONE_HOE = (Item) Item.REGISTRY.get("stone_hoe");
+    public static final Item IRON_HOE = (Item) Item.REGISTRY.get("iron_hoe");
+    public static final Item DIAMOND_HOE = (Item) Item.REGISTRY.get("diamond_hoe");
+    public static final Item GOLD_HOE = (Item) Item.REGISTRY.get("golden_hoe");
+    public static final Item SEEDS = (Item) Item.REGISTRY.get("wheat_seeds");
+    public static final Item WHEAT = (Item) Item.REGISTRY.get("wheat");
+    public static final Item BREAD = (Item) Item.REGISTRY.get("bread");
+    public static final ItemArmor LEATHER_HELMET = (ItemArmor) Item.REGISTRY.get("leather_helmet");
+    public static final ItemArmor LEATHER_CHESTPLATE = (ItemArmor) Item.REGISTRY.get("leather_chestplate");
+    public static final ItemArmor LEATHER_LEGGINGS = (ItemArmor) Item.REGISTRY.get("leather_leggings");
+    public static final ItemArmor LEATHER_BOOTS = (ItemArmor) Item.REGISTRY.get("leather_boots");
+    public static final ItemArmor CHAINMAIL_HELMET = (ItemArmor) Item.REGISTRY.get("chainmail_helmet");
+    public static final ItemArmor CHAINMAIL_CHESTPLATE = (ItemArmor) Item.REGISTRY.get("chainmail_chestplate");
+    public static final ItemArmor CHAINMAIL_LEGGINGS = (ItemArmor) Item.REGISTRY.get("chainmail_leggings");
+    public static final ItemArmor CHAINMAIL_BOOTS = (ItemArmor) Item.REGISTRY.get("chainmail_boots");
+    public static final ItemArmor IRON_HELMET = (ItemArmor) Item.REGISTRY.get("iron_helmet");
+    public static final ItemArmor IRON_CHESTPLATE = (ItemArmor) Item.REGISTRY.get("iron_chestplate");
+    public static final ItemArmor IRON_LEGGINGS = (ItemArmor) Item.REGISTRY.get("iron_leggings");
+    public static final ItemArmor IRON_BOOTS = (ItemArmor) Item.REGISTRY.get("iron_boots");
+    public static final ItemArmor DIAMOND_HELMET = (ItemArmor) Item.REGISTRY.get("diamond_helmet");
+    public static final ItemArmor DIAMOND_CHESTPLATE = (ItemArmor) Item.REGISTRY.get("diamond_chestplate");
+    public static final ItemArmor DIAMOND_LEGGINGS = (ItemArmor) Item.REGISTRY.get("diamond_leggings");
+    public static final ItemArmor DIAMOND_BOOTS = (ItemArmor) Item.REGISTRY.get("diamond_boots");
+    public static final ItemArmor GOLD_HELMET = (ItemArmor) Item.REGISTRY.get("golden_helmet");
+    public static final ItemArmor GOLD_CHESTPLATE = (ItemArmor) Item.REGISTRY.get("golden_chestplate");
+    public static final ItemArmor GOLD_LEGGINGS = (ItemArmor) Item.REGISTRY.get("golden_leggings");
+    public static final ItemArmor GOLD_BOOTS = (ItemArmor) Item.REGISTRY.get("golden_boots");
+    public static final Item FLINT = (Item) Item.REGISTRY.get("flint");
+    public static final Item PORK = (Item) Item.REGISTRY.get("porkchop");
+    public static final Item GRILLED_PORK = (Item) Item.REGISTRY.get("cooked_porkchop");
+    public static final Item PAINTING = (Item) Item.REGISTRY.get("painting");
+    public static final Item GOLDEN_APPLE = (Item) Item.REGISTRY.get("golden_apple");
+    public static final Item SIGN = (Item) Item.REGISTRY.get("sign");
+    public static final Item WOOD_DOOR = (Item) Item.REGISTRY.get("wooden_door");
+    public static final Item BUCKET = (Item) Item.REGISTRY.get("bucket");
+    public static final Item WATER_BUCKET = (Item) Item.REGISTRY.get("water_bucket");
+    public static final Item LAVA_BUCKET = (Item) Item.REGISTRY.get("lava_bucket");
+    public static final Item MINECART = (Item) Item.REGISTRY.get("minecart");
+    public static final Item SADDLE = (Item) Item.REGISTRY.get("saddle");
+    public static final Item IRON_DOOR = (Item) Item.REGISTRY.get("iron_door");
+    public static final Item REDSTONE = (Item) Item.REGISTRY.get("redstone");
+    public static final Item SNOW_BALL = (Item) Item.REGISTRY.get("snowball");
+    public static final Item BOAT = (Item) Item.REGISTRY.get("boat");
+    public static final Item LEATHER = (Item) Item.REGISTRY.get("leather");
+    public static final Item MILK_BUCKET = (Item) Item.REGISTRY.get("milk_bucket");
+    public static final Item CLAY_BRICK = (Item) Item.REGISTRY.get("brick");
+    public static final Item CLAY_BALL = (Item) Item.REGISTRY.get("clay_ball");
+    public static final Item SUGAR_CANE = (Item) Item.REGISTRY.get("reeds");
+    public static final Item PAPER = (Item) Item.REGISTRY.get("paper");
+    public static final Item BOOK = (Item) Item.REGISTRY.get("book");
+    public static final Item SLIME_BALL = (Item) Item.REGISTRY.get("slime_ball");
+    public static final Item STORAGE_MINECART = (Item) Item.REGISTRY.get("chest_minecart");
+    public static final Item POWERED_MINECART = (Item) Item.REGISTRY.get("furnace_minecart");
+    public static final Item EGG = (Item) Item.REGISTRY.get("egg");
+    public static final Item COMPASS = (Item) Item.REGISTRY.get("compass");
+    public static final ItemFishingRod FISHING_ROD = (ItemFishingRod) Item.REGISTRY.get("fishing_rod");
+    public static final Item WATCH = (Item) Item.REGISTRY.get("clock");
+    public static final Item GLOWSTONE_DUST = (Item) Item.REGISTRY.get("glowstone_dust");
+    public static final Item RAW_FISH = (Item) Item.REGISTRY.get("fish");
+    public static final Item COOKED_FISH = (Item) Item.REGISTRY.get("cooked_fished");
+    public static final Item INK_SACK = (Item) Item.REGISTRY.get("dye");
+    public static final Item BONE = (Item) Item.REGISTRY.get("bone");
+    public static final Item SUGAR = (Item) Item.REGISTRY.get("sugar");
+    public static final Item CAKE = (Item) Item.REGISTRY.get("cake");
+    public static final Item BED = (Item) Item.REGISTRY.get("bed");
+    public static final Item DIODE = (Item) Item.REGISTRY.get("repeater");
+    public static final Item COOKIE = (Item) Item.REGISTRY.get("cookie");
+    public static final ItemWorldMap MAP = (ItemWorldMap) Item.REGISTRY.get("filled_map");
+    public static final ItemShears SHEARS = (ItemShears) Item.REGISTRY.get("shears");
+    public static final Item MELON = (Item) Item.REGISTRY.get("melon");
+    public static final Item PUMPKIN_SEEDS = (Item) Item.REGISTRY.get("pumpkin_seeds");
+    public static final Item MELON_SEEDS = (Item) Item.REGISTRY.get("melon_seeds");
+    public static final Item RAW_BEEF = (Item) Item.REGISTRY.get("beef");
+    public static final Item COOKED_BEEF = (Item) Item.REGISTRY.get("cooked_beef");
+    public static final Item RAW_CHICKEN = (Item) Item.REGISTRY.get("chicken");
+    public static final Item COOKED_CHICKEN = (Item) Item.REGISTRY.get("cooked_chicken");
+    public static final Item ROTTEN_FLESH = (Item) Item.REGISTRY.get("rotten_flesh");
+    public static final Item ENDER_PEARL = (Item) Item.REGISTRY.get("ender_pearl");
+    public static final Item BLAZE_ROD = (Item) Item.REGISTRY.get("blaze_rod");
+    public static final Item GHAST_TEAR = (Item) Item.REGISTRY.get("ghast_tear");
+    public static final Item GOLD_NUGGET = (Item) Item.REGISTRY.get("gold_nugget");
+    public static final Item NETHER_STALK = (Item) Item.REGISTRY.get("nether_wart");
+    public static final ItemPotion POTION = (ItemPotion) Item.REGISTRY.get("potion");
+    public static final Item GLASS_BOTTLE = (Item) Item.REGISTRY.get("glass_bottle");
+    public static final Item SPIDER_EYE = (Item) Item.REGISTRY.get("spider_eye");
+    public static final Item FERMENTED_SPIDER_EYE = (Item) Item.REGISTRY.get("fermented_spider_eye");
+    public static final Item BLAZE_POWDER = (Item) Item.REGISTRY.get("blaze_powder");
+    public static final Item MAGMA_CREAM = (Item) Item.REGISTRY.get("magma_cream");
+    public static final Item BREWING_STAND = (Item) Item.REGISTRY.get("brewing_stand");
+    public static final Item CAULDRON = (Item) Item.REGISTRY.get("cauldron");
+    public static final Item EYE_OF_ENDER = (Item) Item.REGISTRY.get("ender_eye");
+    public static final Item SPECKLED_MELON = (Item) Item.REGISTRY.get("speckled_melon");
+    public static final Item MONSTER_EGG = (Item) Item.REGISTRY.get("spawn_egg");
+    public static final Item EXP_BOTTLE = (Item) Item.REGISTRY.get("experience_bottle");
+    public static final Item FIREBALL = (Item) Item.REGISTRY.get("fire_charge");
+    public static final Item BOOK_AND_QUILL = (Item) Item.REGISTRY.get("writable_book");
+    public static final Item WRITTEN_BOOK = (Item) Item.REGISTRY.get("written_book");
+    public static final Item EMERALD = (Item) Item.REGISTRY.get("emerald");
+    public static final Item ITEM_FRAME = (Item) Item.REGISTRY.get("item_frame");
+    public static final Item FLOWER_POT = (Item) Item.REGISTRY.get("flower_pot");
+    public static final Item CARROT = (Item) Item.REGISTRY.get("carrot");
+    public static final Item POTATO = (Item) Item.REGISTRY.get("potato");
+    public static final Item POTATO_BAKED = (Item) Item.REGISTRY.get("baked_potato");
+    public static final Item POTATO_POISON = (Item) Item.REGISTRY.get("poisonous_potato");
+    public static final ItemMapEmpty MAP_EMPTY = (ItemMapEmpty) Item.REGISTRY.get("map");
+    public static final Item CARROT_GOLDEN = (Item) Item.REGISTRY.get("golden_carrot");
+    public static final Item SKULL = (Item) Item.REGISTRY.get("skull");
+    public static final Item CARROT_STICK = (Item) Item.REGISTRY.get("carrot_on_a_stick");
+    public static final Item NETHER_STAR = (Item) Item.REGISTRY.get("nether_star");
+    public static final Item PUMPKIN_PIE = (Item) Item.REGISTRY.get("pumpkin_pie");
+    public static final Item FIREWORKS = (Item) Item.REGISTRY.get("fireworks");
+    public static final Item FIREWORKS_CHARGE = (Item) Item.REGISTRY.get("firework_charge");
+    public static final ItemEnchantedBook ENCHANTED_BOOK = (ItemEnchantedBook) Item.REGISTRY.get("enchanted_book");
+    public static final Item REDSTONE_COMPARATOR = (Item) Item.REGISTRY.get("comparator");
+    public static final Item NETHER_BRICK = (Item) Item.REGISTRY.get("netherbrick");
+    public static final Item QUARTZ = (Item) Item.REGISTRY.get("quartz");
+    public static final Item MINECART_TNT = (Item) Item.REGISTRY.get("tnt_minecart");
+    public static final Item MINECART_HOPPER = (Item) Item.REGISTRY.get("hopper_minecart");
+    public static final Item HORSE_ARMOR_IRON = (Item) Item.REGISTRY.get("iron_horse_armor");
+    public static final Item HORSE_ARMOR_GOLD = (Item) Item.REGISTRY.get("golden_horse_armor");
+    public static final Item HORSE_ARMOR_DIAMOND = (Item) Item.REGISTRY.get("diamond_horse_armor");
+    public static final Item LEASH = (Item) Item.REGISTRY.get("lead");
+    public static final Item NAME_TAG = (Item) Item.REGISTRY.get("name_tag");
+    public static final Item MINECART_COMMAND = (Item) Item.REGISTRY.get("command_block_minecart");
+    public static final Item RECORD_1 = (Item) Item.REGISTRY.get("record_13");
+    public static final Item RECORD_2 = (Item) Item.REGISTRY.get("record_cat");
+    public static final Item RECORD_3 = (Item) Item.REGISTRY.get("record_blocks");
+    public static final Item RECORD_4 = (Item) Item.REGISTRY.get("record_chirp");
+    public static final Item RECORD_5 = (Item) Item.REGISTRY.get("record_far");
+    public static final Item RECORD_6 = (Item) Item.REGISTRY.get("record_mall");
+    public static final Item RECORD_7 = (Item) Item.REGISTRY.get("record_mellohi");
+    public static final Item RECORD_8 = (Item) Item.REGISTRY.get("record_stal");
+    public static final Item RECORD_9 = (Item) Item.REGISTRY.get("record_strad");
+    public static final Item RECORD_10 = (Item) Item.REGISTRY.get("record_ward");
+    public static final Item RECORD_11 = (Item) Item.REGISTRY.get("record_11");
+    public static final Item RECORD_12 = (Item) Item.REGISTRY.get("record_wait");
+
+}
diff --git a/src/main/java/net/minecraft/server/RecipesCrafting.java b/src/main/java/net/minecraft/server/RecipesCrafting.java
new file mode 100644
index 0000000..0abda55
--- /dev/null
+++ b/src/main/java/net/minecraft/server/RecipesCrafting.java
@@ -0,0 +1,25 @@
+package net.minecraft.server;
+
+public class RecipesCrafting {
+
+    public RecipesCrafting() {}
+
+    public void a(CraftingManager craftingmanager) {
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.CHEST), new Object[] { "###", "# #", "###", Character.valueOf('#'), Blocks.WOOD});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.TRAPPED_CHEST), new Object[] { "#-", Character.valueOf('#'), Blocks.CHEST, Character.valueOf('-'), Blocks.TRIPWIRE_SOURCE});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.ENDER_CHEST), new Object[] { "###", "#E#", "###", Character.valueOf('#'), Blocks.OBSIDIAN, Character.valueOf('E'), Items.EYE_OF_ENDER});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.FURNACE), new Object[] { "###", "# #", "###", Character.valueOf('#'), Blocks.COBBLESTONE});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.WORKBENCH), new Object[] { "##", "##", Character.valueOf('#'), Blocks.WOOD});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.SANDSTONE), new Object[] { "##", "##", Character.valueOf('#'), new ItemStack(Blocks.SAND, 1, 0)});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.SANDSTONE, 4, 2), new Object[] { "##", "##", Character.valueOf('#'), Blocks.SANDSTONE});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.SANDSTONE, 1, 1), new Object[] { "#", "#", Character.valueOf('#'), new ItemStack(Blocks.STEP, 1, 1)});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.QUARTZ_BLOCK, 1, 1), new Object[] { "#", "#", Character.valueOf('#'), new ItemStack(Blocks.STEP, 1, 7)});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.QUARTZ_BLOCK, 2, 2), new Object[] { "#", "#", Character.valueOf('#'), new ItemStack(Blocks.QUARTZ_BLOCK, 1, 0)});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.SMOOTH_BRICK, 4), new Object[] { "##", "##", Character.valueOf('#'), Blocks.STONE});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.IRON_FENCE, 16), new Object[] { "###", "###", Character.valueOf('#'), Items.IRON_INGOT});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.THIN_GLASS, 16), new Object[] { "###", "###", Character.valueOf('#'), Blocks.GLASS});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.REDSTONE_LAMP_OFF, 1), new Object[] { " R ", "RGR", " R ", Character.valueOf('R'), Items.REDSTONE, Character.valueOf('G'), Blocks.GLOWSTONE});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.BEACON, 1), new Object[] { "GGG", "GSG", "OOO", Character.valueOf('G'), Blocks.GLASS, Character.valueOf('S'), Items.NETHER_STAR, Character.valueOf('O'), Blocks.OBSIDIAN});
+        craftingmanager.registerShapedRecipe(new ItemStack(Blocks.NETHER_BRICK, 1), new Object[] { "NN", "NN", Character.valueOf('N'), Items.NETHER_BRICK});
+    }
+}
-- 
1.9.1

